---
title: "Deploy all content"
date: "`r Sys.time()`"
output: html_document
---

```{r setup}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 

library(dplyr)
library(connectapi)
library(glue)


#' Deploy content to Connect
#'
#' @param client Connect `client` from `connectapi::connect()`.
#' @param app_name The name of the app.
#' @param app_title The title of the app.
#' @param app_directory_location The location of the app directory.
#' @param app_files The app files to include.
#' @param vanity_url The vanity URL to assign to the content.
#'
#' @return connectapi::Content R6 class.
deploy_content_to_connect <- function(
    client, 
    app_name, 
    app_title, 
    app_directory_location, 
    app_files,
    app_primary_doc = NULL,
    vanity_url = NULL,
    delete_manifest = TRUE
  ) {
  # Write a manifest file.
  rsconnect::writeManifest(
    appDir = app_directory_location, 
    appFiles = app_files,
    appPrimaryDoc = app_primary_doc
  )
  
  # Deploy the content.
  content <- 
    client %>%
    deploy(
      bundle_dir(app_directory_location),
      name = app_name,
      title = app_title
    )
  
  # Make the app visible to the world!
  content$update(access_type = "all")
  
  # Define the contents collaborators
  collaborators <- c(
    "69db516b-ba3e-442a-84d9-f916fc92a2ca", # Gagan Singh
    "99a43fac-2edd-4c31-8cba-a001c507da2e"  # Xu Fei
    
  )
  for (c in collaborators) {
    content %>%
      content_add_user(c, role = "owner")
  }
  # Get tags.
  tags <- client %>%
    get_tags()
  
  # Update content settings.
  content %>%
    set_vanity_url(vanity_url, force = TRUE) %>%
    set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R) %>%
    set_image_path("./img/bike_share_connect_image.drawio.png")
  
  # Delete the manfifest.json
  if (delete_manifest == TRUE) {
    unlink(file.path(app_directory_location, "manifest.json"))
  }
  
  content
}


# Establish a connection to RStudio connect.
client <- connect(
  server = Sys.getenv("CONNECT_SERVER"),
  api_key = Sys.getenv("CONNECT_API_KEY")
)

tags <- client %>%
    get_tags()
```

The purpose of this document is to deploy all `bike_predict` related content to RStudio Connect. It should be run from RStudio Workbench (or your local development environment). This document itself is not meant to be published.

## 01 ETL

### 1.1 Raw Data Refresh

```{r}
# Deploy the content.
content_etl_01 <- deploy_content_to_connect(
  client = client,
  app_name = "bike-predict-r-raw-data-refresh",
  app_title = "Bike Predict (R) - ETL Step 01 - Raw Data Refresh",
  app_directory_location = "./content/01-etl/",
  app_files = "01-raw-data-refresh.qmd",
  vanity_url = "bike-predict-r-raw-data-refresh"
)

# Set tags.
content_etl_01 %>%
  set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R$ETL)

# Set a schedule.
content_etl_01 %>%
  get_variant_default() %>%
  get_variant_schedule() %>%
  set_schedule_day(
    start_time = lubridate::as_datetime(glue(
      as.character(lubridate::today()),
      " 05:00:00 UTC"
    ))
  )

# Print the URL.
print(content_etl_01$get_url())
print(glue("https://colorado.rstudio.com/rsc{get_vanity_url(content_etl_01)}"))

# Open the content in your browser.
content_etl_01 %>% 
  browse_dashboard()
```

### 1.2 Tidy the data

```{r}
# Deploy the content.
content_01_02 <- deploy_content_to_connect(
  client = client,
  app_name = "bike-predict-r-tidy-data",
  app_title = "Bike Predict (R) - ETL Step 02 - Tidy the data",
  app_directory_location = "./content/01-etl/",
  app_files = "02-tidy-data.qmd",
  vanity_url = "bike-predict-r-tidy-data"
)

# Set tags.
content_01_02 %>%
  set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R$ETL)

# Set a schedule.
content_01_02 %>%
  get_variant_default() %>%
  get_variant_schedule() %>%
  set_schedule_day(
    start_time = lubridate::as_datetime(glue(
      as.character(lubridate::today()),
      " 05:15:00 UTC"
    ))
  )

# Print the URL.
print(content_01_02$get_url())
print(glue("https://colorado.rstudio.com/rsc{get_vanity_url(content_01_02)}"))

# Open the content in your browser.
content_01_02 %>% 
  browse_dashboard()
```

## 02 Model

### 2.1 Train and deploy the model

```{r}
# Deploy the content.
content_train_model <- deploy_content_to_connect(
  client = client,
  app_name = "bike-predict-r-train-and-deploy-model",
  app_title = "Bike Predict (R) - Model Step 01 - Train and Deploy Model",
  app_directory_location = "./content/02-model",
  app_files = "01-train-and-deploy-model.qmd",
  vanity_url = "bike-predict-r-train-and-deploy-model"
)

# Set tags.
content_train_model %>%
  set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R$Model)

# Set a schedule.
content_train_model %>%
  get_variant_default() %>%
  get_variant_schedule() %>%
  set_schedule_day(
    start_time = lubridate::as_datetime(glue(
      as.character(lubridate::today()),
      " 05:30:00 UTC"
    ))
  )

# Print the URL.
print(content_train_model$get_url())
print(glue("https://colorado.rstudio.com/rsc{get_vanity_url(content_train_model)}"))

# Open the content in your browser.
content_train_model %>% 
  browse_dashboard()
```

### 2.2 Model Metrics

```{r}
# Deploy the content.
content <- deploy_content_to_connect(
  client = client,
  app_name = "bike-predict-r-model-metrics",
  app_title = "Bike Predict (R) - Model Step 02 - Model Metrics",
  app_directory_location = "./content/02-model",
  app_files = "02-model-metrics.qmd",
  vanity_url = "bike-predict-r-model-metrics"
)

# Set tags.
content %>%
  set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R$Model)

# Set a schedule.
content %>%
  get_variant_default() %>%
  get_variant_schedule() %>%
  set_schedule_day(
    start_time = lubridate::as_datetime(glue(
      as.character(lubridate::today()),
      " 05:30:00 UTC"
    ))
  )

# Print the URL.
print(content$get_url())
print(glue("https://colorado.rstudio.com/rsc{get_vanity_url(content)}"))

# Open the content in your browser.
content %>% 
  browse_dashboard()
```

## App

### 3.1 Client App

```{r}
# Deploy the content.
content <- deploy_content_to_connect(
  client = client,
  app_name = "bike-predict-r-client-app",
  app_title = "Bike Predict (R) - App - Client App",
  app_directory_location = "./content/03-app",
  app_files = "01-client-app.R",
  app_primary_doc = "01-client-app.R",
  vanity_url = "bike-predict-r-client-app"
)

# Set tags.
content %>%
  set_content_tags(tags$`Projects and Presentations`$`Bike Predict`$R$App)


# Print the URL.
print(content$get_url())
print(glue("https://colorado.rstudio.com/rsc{get_vanity_url(content)}"))

# Open the content in your browser.
content %>% 
  browse_dashboard()
```
